/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package FileClient;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.util.Base64;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.BadPaddingException;
import javax.crypto.Cipher;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.NoSuchPaddingException;
import javax.crypto.SecretKey;
import javax.crypto.spec.SecretKeySpec;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.io.IOException;
import java.net.DatagramPacket;
import java.net.InetAddress;
import java.net.MulticastSocket;
import java.net.Socket;

/**
 *
 * @author admin
 */
public class frmfilesharing extends javax.swing.JFrame {

    private DataOutputStream output;
    private InetAddress group;
    private int port;
    private String nick;
    private Thread mythread;
    private MulticastSocket socket;

    /**
     * Creates new form frmfilesharing
     */
    public frmfilesharing() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        txtpath = new javax.swing.JTextField();
        btnchoose = new javax.swing.JButton();
        btnsend = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtnick = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtgroup = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtport = new javax.swing.JTextField();
        btnketnoi = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtnoidung = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        txtpublickey = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtchat = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnchoose.setBackground(new java.awt.Color(102, 255, 255));
        btnchoose.setText("Chọn");
        btnchoose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnchooseActionPerformed(evt);
            }
        });

        btnsend.setBackground(new java.awt.Color(102, 255, 255));
        btnsend.setText(" Gửi");
        btnsend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsendActionPerformed(evt);
            }
        });

        jLabel1.setText("Nick");

        jLabel2.setText("Nhap địa chỉ ");

        txtgroup.setText("127.0.0.1");
        txtgroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtgroupActionPerformed(evt);
            }
        });

        jLabel3.setText("Port");

        txtport.setText("3456");

        btnketnoi.setText("Ket Noi");
        btnketnoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnketnoiActionPerformed(evt);
            }
        });

        txtnoidung.setColumns(20);
        txtnoidung.setRows(5);
        jScrollPane2.setViewportView(txtnoidung);

        jLabel4.setText("Public Key");

        txtchat.setColumns(20);
        txtchat.setRows(5);
        jScrollPane3.setViewportView(txtchat);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jLabel4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnchoose)
                                    .addComponent(btnketnoi)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtpublickey, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(28, 28, 28))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtnick, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtport, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtgroup, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(26, 26, 26)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtpath)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 357, Short.MAX_VALUE)
                    .addComponent(jScrollPane3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnsend)
                .addGap(14, 14, 14))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtgroup, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(txtport, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtnick, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtpublickey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnsend, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btnketnoi, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtpath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnchoose))
                .addGap(36, 36, 36))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnchooseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnchooseActionPerformed
        // TODO add your handling code here:                                              
        JFileChooser fileChooser = new JFileChooser();
        int option = fileChooser.showOpenDialog(this);
        if (option == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            txtpath.setText(file.getAbsolutePath());
        } else {
            txtpath.setText("No file selected");
        }
    }//GEN-LAST:event_btnchooseActionPerformed

    private void btnsendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsendActionPerformed
        // TODO add your handling code here:
        String content = txtnoidung.getText();
        String user = txtnick.getText();

        if (!content.isBlank()) {
            try {
                txtchat.append(user + ": " + content + "\n");
                output.writeUTF("TEXT");
                output.writeUTF(encrypt(user + ": " + content, txtpublickey.getText()));
                txtnoidung.setText("");

            } catch (InvalidKeyException | NoSuchAlgorithmException | NoSuchPaddingException | IllegalBlockSizeException | BadPaddingException | UnsupportedEncodingException ex) {
                Logger.getLogger(frmfilesharing.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex) {
                Logger.getLogger(frmfilesharing.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        String path = txtpath.getText();
        var file = new File(path);

        if (file.exists() && !file.isDirectory()) {
            try {
                output.writeUTF("FILE");

                output.writeUTF(file.getName());
                output.writeLong(file.length());

                try (FileInputStream fileInputStream = new FileInputStream(file)) {
                    byte[] buffer = new byte[4096];
                    int bytesRead;
                    while ((bytesRead = fileInputStream.read(buffer)) != -1) {
                        output.write(buffer, 0, bytesRead);
                    }
                }
                txtchat.append(user+ ": " + file.getName() + "\n");
                System.out.println("File sent: " + file.getName());

                txtpath.setText("");

            } catch (IOException ex) {
                Logger.getLogger(frmfilesharing.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnsendActionPerformed

    private void btnketnoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnketnoiActionPerformed
        // TODO add your handling code here:
        try {
            String address = txtgroup.getText();
            int port = Integer.parseInt(txtport.getText());

            Socket socket = new Socket(address, port);
            DataInputStream input = new DataInputStream(socket.getInputStream());
            output = new DataOutputStream(socket.getOutputStream());
            String key = txtpublickey.getText();

            var thread = new Thread(() -> {
                try {
                    while (true) {
                        String type = input.readUTF();

                        if (type.equals("TEXT")) {
                            String message = input.readUTF();
                            String decryptedMessage = decrypt(message, key);
                            txtchat.append(decryptedMessage + "\n");

                            System.out.println("Server: " + message);
                        } else if (type.equals("FILE")) {
                            String fileName = input.readUTF();
                            long fileSize = input.readLong();
                            byte[] fileData = new byte[(int) fileSize];
                            input.readFully(fileData);

                            try (FileOutputStream fileOutputStream = new FileOutputStream(fileName)) {
                                fileOutputStream.write(fileData);
                                txtchat.append("File: " + fileName + ", saved at " + new File(fileName).getCanonicalPath());
                            }

                            System.out.println("Received file: " + fileName);

                        }
                    }

                } catch (IOException e) {
                    System.err.println("Connection error: " + e.getMessage());
                } catch (Exception ex) {
                    Logger.getLogger(frmfilesharing.class.getName()).log(Level.SEVERE, null, ex);
                }
            });

            thread.setDaemon(true);
            thread.start();

            System.out.println("Connected");

        } catch (IOException ex) {
            Logger.getLogger(frmfilesharing.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnketnoiActionPerformed

    private void txtgroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtgroupActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtgroupActionPerformed

    public String readPublicKeyFromFile(String filePath) throws IOException {
        return new String(Files.readAllBytes(Paths.get(filePath)));
    }

    public void sendEncrytedMessage(String user, String Content) throws IOException {
        String filePath = "D:\\Zalo Received Files\\Monday's Homework\\PublicKey.txt";
        String publickey = readPublicKeyFromFile(filePath);

    }

    private static String encrypt(String plainText, String key) throws Exception {
        Cipher encryptCipher = Cipher.getInstance("AES");
        byte[] secretKeyDecoded = Base64.getDecoder().decode(key);

        SecretKey secretKey = new SecretKeySpec(secretKeyDecoded, 0, secretKeyDecoded.length, "AES");

        encryptCipher.init(Cipher.ENCRYPT_MODE, secretKey);
        byte[] encryptedMessage = encryptCipher.doFinal((plainText).getBytes("UTF-8"));

        return Base64.getEncoder().encodeToString(encryptedMessage);

    }

    private static String decrypt(String encryptedText, String key) throws Exception {
        Cipher decryptCipher = Cipher.getInstance("AES");
        byte[] secretKeyDecoded = Base64.getDecoder().decode(key);

        SecretKey secretKey = new SecretKeySpec(secretKeyDecoded, 0, secretKeyDecoded.length, "AES");

        decryptCipher.init(Cipher.DECRYPT_MODE, secretKey);
        byte[] decryptedMessage = decryptCipher.doFinal(Base64.getDecoder().decode(encryptedText));

        return new String(decryptedMessage);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmfilesharing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmfilesharing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmfilesharing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmfilesharing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmfilesharing().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnchoose;
    private javax.swing.JButton btnketnoi;
    private javax.swing.JButton btnsend;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea txtchat;
    private javax.swing.JTextField txtgroup;
    private javax.swing.JTextField txtnick;
    private javax.swing.JTextArea txtnoidung;
    private javax.swing.JTextField txtpath;
    private javax.swing.JTextField txtport;
    private javax.swing.JTextField txtpublickey;
    // End of variables declaration//GEN-END:variables
}
